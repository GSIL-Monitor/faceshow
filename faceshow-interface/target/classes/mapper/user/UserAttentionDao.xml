<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faceshow.modules.user.dao.UserAttentionDao">
    <resultMap id="BaseResultMap" type="com.faceshow.modules.user.entity.UserAttention">
        <id column="attention_id" jdbcType="INTEGER" property="attentionId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="account" jdbcType="INTEGER" property="account"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="black_list" jdbcType="TINYINT" property="blackList"/>
        <result column="shield_circle" jdbcType="TINYINT" property="shieldCircle"/>
        <result column="is_tutual" jdbcType="TINYINT" property="isTutual"/>
        <result column="distance" jdbcType="VARCHAR" property="distance"/>
    </resultMap>
    <sql id="Base_Column_List">
        <if test="fields == null">
            attention_id, user_id, account, create_time, black_list, shield_circle, is_tutual,
            distance
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        attention_id,user_id,account,create_time,black_list,shield_circle,is_tutual,distance
        from user_attention
        where attention_id = #{attentionId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_attention
        where attention_id = #{attentionId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.faceshow.modules.user.entity.UserAttention">
        insert into user_attention (attention_id, user_id, account,
        create_time, black_list, shield_circle,
        is_tutual, distance)
        values (#{attentionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{account,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{blackList,jdbcType=TINYINT}, #{shieldCircle,jdbcType=TINYINT},
        #{isTutual,jdbcType=TINYINT}, #{distance,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.faceshow.modules.user.entity.UserAttention">
        insert into user_attention
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="attentionId != null">
                attention_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="blackList != null">
                black_list,
            </if>
            <if test="shieldCircle != null">
                shield_circle,
            </if>
            <if test="isTutual != null">
                is_tutual,
            </if>
            <if test="distance != null">
                distance,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="attentionId != null">
                #{attentionId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blackList != null">
                #{blackList,jdbcType=TINYINT},
            </if>
            <if test="shieldCircle != null">
                #{shieldCircle,jdbcType=TINYINT},
            </if>
            <if test="isTutual != null">
                #{isTutual,jdbcType=TINYINT},
            </if>
            <if test="distance != null">
                #{distance,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.faceshow.modules.user.entity.UserAttention">
        update user_attention
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blackList != null">
                black_list = #{blackList,jdbcType=TINYINT},
            </if>
            <if test="shieldCircle != null">
                shield_circle = #{shieldCircle,jdbcType=TINYINT},
            </if>
            <if test="isTutual != null">
                is_tutual = #{isTutual,jdbcType=TINYINT},
            </if>
            <if test="distance != null">
                distance = #{distance,jdbcType=VARCHAR},
            </if>
        </set>
        where attention_id = #{attentionId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.faceshow.modules.user.entity.UserAttention">
        update user_attention
        set user_id = #{userId,jdbcType=INTEGER},
        account = #{account,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        black_list = #{blackList,jdbcType=TINYINT},
        shield_circle = #{shieldCircle,jdbcType=TINYINT},
        is_tutual = #{isTutual,jdbcType=TINYINT},
        distance = #{distance,jdbcType=VARCHAR}
        where attention_id = #{attentionId,jdbcType=INTEGER}
    </update>

    <select id="selectByUserid" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from user_attention
        where user_id = #{userId,jdbcType=INTEGER} and account = #{account,jdbcType=INTEGER}
    </select>

    <update id="updateTu" parameterType="java.util.Map">
        update user_attention
        set is_tutual=#{isTutual}
        where user_id = #{userId,jdbcType=INTEGER} and account = #{account,jdbcType=INTEGER}
    </update>
    <delete id="deleteByUserid" parameterType="java.lang.Integer">
        delete from user_attention
        where user_id = #{userId,jdbcType=INTEGER} and account = #{account,jdbcType=INTEGER}
    </delete>

    <select id="selectAll" parameterType="java.util.Map" resultType="java.util.Map">
        select
        a.attention_id,a.user_id,a.account,a.create_time,a.black_list*1 black_list,a.shield_circle*1 shield_circle,a.is_tutual*1 is_tutual,a.distance,b.sex,b.nick_name,b.img,b.signature
        from user_attention as a,user_info as b
         where 	a.account = b.user_id AND a.user_id =#{userId}
         LIMIT #{begin},#{pageSize}
    </select>

    <select id="selectAllNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        <!--select
        count(a.attention_id)
        from user_attention as a
        where a.user_id = #{userId,jdbcType=INTEGER}-->
        select
        count(*)
        from user_attention as a,user_info as b
        where 	a.account = b.user_id AND a.user_id =#{userId}
    </select>

    <select id="selectFriend" parameterType="java.util.Map" resultType="java.util.Map">
    <!--    select a.account,b.sex,b.nick_name,b.img,b.signature
        from user_attention as a,user_info as b where a.account=b.user_id and a.user_id=#{userId,jdbcType=INTEGER}  and a.is_tutual=1   order by b.nick_name asc limit #{begin,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}-->
        SELECT
        a.account user_id,
        b.sex,
        b.nick_name,
        b.img,
        b.signature
        FROM
        user_attention AS a,
        user_info AS b
        WHERE
        a.account = b.user_id
        AND a.is_tutual = 1
        AND a.user_id = #{userId}
        order by b.nick_name asc limit #{begin,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>

    <select id="selectFriendNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select  count(a.user_id) as totalpages
        from user_attention as a where   a.user_id=#{userId,jdbcType=INTEGER}  and a.is_tutual=1
    </select>
    <select id="selectBeAll" parameterType="java.util.Map" resultType="java.util.Map">
        select
        a.attention_id,a.user_id account,
        a.account user_id,
        a.create_time,a.black_list*1 black_list,
        a.shield_circle*1 shield_circle,a.is_tutual*1 is_tutual,
        a.distance,b.sex,b.nick_name,b.img,b.signature
        from user_attention as a,user_info as b
        where 	a.user_id = b.user_id AND a.account =#{user_id}
         LIMIT #{begin},#{pageSize}

    </select>

    <select id="selectBeAllNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      <!--select
        count(a.attention_id)
        from user_attention as a
        where a.account = #{account,jdbcType=INTEGER} and a.user_id=#{account,jdbcType=INTEGER}-->
        select
        count(*)
        from user_attention as a,user_info as b
        where 	a.user_id = b.user_id AND a.account =#{user_id}

    </select>

    <delete id="deleteBack" parameterType="java.lang.Integer">
        delete from user_attention
        where (user_id = #{userId,jdbcType=INTEGER} and account = #{account,jdbcType=INTEGER}) or (user_id = #{account,jdbcType=INTEGER} and account = #{userId,jdbcType=INTEGER})
    </delete>

    <update id="updateByUserIdAccount" parameterType="com.faceshow.modules.user.entity.UserAttention">
        update user_attention
        set  shield_circle = #{shieldCircle,jdbcType=TINYINT}
        where user_id = #{userId,jdbcType=INTEGER} and account = #{account,jdbcType=INTEGER}
    </update>

    <select id="selectAllShield" parameterType="java.util.Map" resultType="java.util.Map">
        select
        a.attention_id,a.user_id,a.account,a.create_time,a.black_list,a.shield_circle,a.is_tutual,a.distance,b.sex,b.nick_name,b.img,b.signature
        from user_attention as a,user_info as b
        where a.user_id = #{userId,jdbcType=INTEGER} and a.shield_circle = 0 and a.user_id=b.user_id;
    </select>
    <select id="selectAllShieldNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select
        count(a.attention_id)
        from user_attention as a
        where a.user_id = #{userId,jdbcType=INTEGER} and a.shield_circle = 0;
    </select>

    <!-- 判断两人是否是好友关系-->
    <select id="selectFriendByUserIdAndAccount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from user_attention where user_id = #{userId} and account = #{account} and is_tutual = 1
    </select>

    <!-- 判断当前用户是否已经关注某用户-->
    <select id="isFollowByUserIdAndAccount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from user_attention where user_id = #{userId} and account = #{account}
    </select>

</mapper>